class:: Lorenz2DN
summary:: lorenz 2D chaotic generator
related:: Classes/Lorenz2DL, Classes/Lorenz2DC
categories:: UGens>Generators>Stochastic


Description::

code::
x' = s(y - x)
y' = x(r - z) - y
z' = xy - bz
::

The time step amount strong::h:: determines the rate at which the ODE is evaluated. Higher values will increase the rate, but cause more instability. This generator uses a different algorithm than the LorenzN/L/C ugen included with current distributions. The resulting sound is somewhat different, and it also means that strong::h:: becomes unstable around 0.02.

classmethods::

method::ar, kr

argument::minfreq
minimum frequency in Hertz

argument::maxfreq
maximum frequency in Hertz

argument::s, r, b
equation variables

argument::h
integration time step

argument::x0
initial value of x

argument::y0
initial value of y

argument::z0
initial value of z


Examples::

code::
{ Lorenz2DN.ar(11025, 44100) }.play(s);

// randomly modulate params
(
{ Lorenz2DN.ar(
	11025, 44100,
	LFNoise0.kr(1, 2, 10),
	20,
	LFNoise0.kr(1, 1.5, 2),
	0.02
) * 0.2 }.play(s);
)

// as a frequency control
{ SinOsc.ar(Lorenz2DN.ar(40, 80, h:0.02)*800+900)*0.4 }.play(s);
::
