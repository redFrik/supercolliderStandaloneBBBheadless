{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PV_CommonMul			multiplies common magnitudes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 PV_CommonMul(bufferA,  bufferB, tolerance, remove)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Returns magnitudes common to bufferA & bufferB within a tolerance level.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 bufferA
\f1\b0  - fft buffer A.\

\f0\b bufferB
\f1\b0  - fft buffer B.\

\f0\b tolerance -
\f1\b0 magnitudes within which test will pass\

\f0\b remove -
\f1\b0 scale uncommon magnitudes\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 s.boot;\
\cf2 (\
b = \cf3 Buffer\cf2 .alloc(s, 2048, 1);\
c = \cf3 Buffer\cf2 .alloc(s, 2048, 1);\
d = \cf3 Buffer\cf2 .read(s, \cf4 "sounds/a11wlk01.wav"\cf2 );\
)\
\
(\
\cf3 SynthDef\cf2 (\cf4 "help-commonMul"\cf2 , \{ \cf3 arg\cf2  out=0, bufnumA=0, bufnumB=1, soundBufnum=2;\
	\cf3 var\cf2  inA, inB, chainA, chainB, chain;\
	inA = \cf3 HPF\cf2 .ar(\cf3 Mix\cf2 .ar(\cf3 LFSaw\cf2 .ar([100, 150], 0, 0.2)), 1200);\
	inB = \cf3 PlayBuf\cf2 .ar(1, soundBufnum, \cf3 BufRateScale\cf2 .kr(soundBufnum), loop: 1);\
	chainA = \cf3 FFT\cf2 (bufnumA, inA);\
	chainB = \cf3 FFT\cf2 (bufnumB, inB);\
	chain = \cf3 PV_CommonMul\cf2 (chainA, chainB, \cf3 MouseX\cf2 .kr(0, 50), \cf3 MouseY\cf2 .kr); \
	\cf3 Out\cf2 .ar(out,  \cf3 IFFT\cf2 (chain).dup);\
\}).play(s,[\cf5 \\out\cf2 , 0, \cf5 \\bufnumA\cf2 , b.bufnum, \cf5 \\bufnumB\cf2 , c.bufnum, \cf5 \\soundBufnum\cf2 , d.bufnum]);\
)}