{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PV_Cutoff				zero bins with interpolation\

\f1\b0\fs24 \

\f0\b PV_Cutoff(buffer,  wipe)\

\f1\b0 \
Clears bins above or below a cutoff point.  Interpolate.\

\f0\b buffer
\f1\b0  - fft buffer.\

\f0\b wipe
\f1\b0  - can range between -1 and +1.\
if wipe == 0 then there is no effect.\
if  wipe > 0 then it acts like a high pass filter, clearing bins from the bottom up. \
if  wipe < 0 then it acts like a low pass filter, clearing bins from the top down.\
\

\f2\fs18 s.boot;\
\
b = \cf2 Buffer\cf0 .alloc(s,2048,1);\
\
(\
\cf2 SynthDef\cf0 (\cf3 "help-brick"\cf0 , \{ \cf2 arg\cf0  out=0, bufnum=0;\
	\cf2 var\cf0  in, chain;\
	in = \{\cf2 WhiteNoise\cf0 .ar(0.2)\}.dup;\
	chain = \cf2 FFT\cf0 (bufnum, in);\
	chain = \cf2 PV_Cutoff\cf0 (chain, \cf2 SinOsc\cf0 .kr(0.1)); \
	\cf2 Out\cf0 .ar(out, \cf2 IFFT\cf0 (chain).dup);\
\}).play(s,[\cf4 \\out\cf0 , 0, \cf4 \\bufnum\cf0 , b.bufnum]);\
)
\f1\fs24 \
}